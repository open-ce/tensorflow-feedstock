From d28b07f3de5558dc0449045c42b436f5fffc0761 Mon Sep 17 00:00:00 2001
From: Zhufeng Pan <panzf@google.com>
Date: Tue, 8 Nov 2022 11:12:10 -0800
Subject: [PATCH] Fix nn.conv3d_transpose security vulnerability with illegal
 input shape

PiperOrigin-RevId: 487000656
---
 tensorflow/core/kernels/conv_grad_ops_3d.cc      |  5 +++++
 .../kernel_tests/nn_ops/conv3d_transpose_test.py | 16 +++++++++++++++-
 2 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/tensorflow/core/kernels/conv_grad_ops_3d.cc b/tensorflow/core/kernels/conv_grad_ops_3d.cc
index 09d3365564d..9e12a85c051 100644
--- a/tensorflow/core/kernels/conv_grad_ops_3d.cc
+++ b/tensorflow/core/kernels/conv_grad_ops_3d.cc
@@ -1283,6 +1283,11 @@ class Conv3DBackpropInputOp<GPUDevice, T> : public OpKernel {
     Tensor* in_backprop;
     OP_REQUIRES_OK(context,
                    context->allocate_output(0, input_shape, &in_backprop));
+    for (std::size_t i = 0; i < input_shape.dims(); ++i) {
+      if (input_shape.dim_size(i) == 0) {
+        return;
+      }
+    }
 
     auto* stream = context->op_device_context()->stream();
     OP_REQUIRES(context, stream, errors::Internal("No GPU stream available."));
diff --git a/tensorflow/python/kernel_tests/nn_ops/conv3d_transpose_test.py b/tensorflow/python/kernel_tests/nn_ops/conv3d_transpose_test.py
index 1e683808296..6d185bb7646 100644
--- a/tensorflow/python/kernel_tests/nn_ops/conv3d_transpose_test.py
+++ b/tensorflow/python/kernel_tests/nn_ops/conv3d_transpose_test.py
@@ -126,7 +126,7 @@ class Conv3DTransposeTest(test.TestCase):
     x_value = np.random.random_sample(x_shape).astype(np.float64)
     f_value = np.random.random_sample(f_shape).astype(np.float64)
     nn_ops.conv3d_transpose(
-        x_value, f_value, y_shape, strides, data_format='NCDHW')
+        x_value, f_value, y_shape, strides, data_format="NCDHW")
 
   def testConv3DTransposeOutputShapeType(self):
     # Test case for GitHub issue 18887
@@ -218,6 +218,20 @@ class Conv3DTransposeTest(test.TestCase):
     err_tolerance = 0.00055
     self.assertLess(err, err_tolerance)
 
+  def testConv3DTransposeZeroShapeDoNotRaiseError(self):
+    with self.cached_session():
+      x_value = np.zeros([10, 0, 2, 3, 3])
+      f_value = np.ones((3, 3, 3, 3, 3))
+      y_shape = np.stack([10, 0, 2, 3, 3])
+      output = nn_ops.conv3d_transpose(
+          x_value,
+          f_value,
+          y_shape,
+          strides=(1, 1, 1),
+          data_format="NDHWC",
+          padding="SAME",
+      )
+      _ = self.evaluate(output)
 
 if __name__ == "__main__":
   test.main()
-- 
2.34.1

