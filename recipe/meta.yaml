{% set build_version = "2.4.1" %}

#This is the recipe to build both CPU and CUDA variants of tensorflow-base and libtensorflow
package:
  name: tensorflow-base
  version: {{ build_version }}

source:
  git_url: https://github.com/tensorflow/tensorflow.git
  git_rev: v{{ build_version }}
  patches:
    # 00xx - patch is carried forward from anaconda
{% if build_type == 'cuda' %}
    - 0001-do-not-include-B-usr-bin-flag.patch
{% endif %}

    # 01xx - patch is specific to open-ce and will always be carried forward and not upstreamed
    - 0101-include-c-and-cc-headers.patch
    - 0102-include-cc-in-pip-package.patch
    - 0103-BUILD-changes-for-external-sqlite-package.patch
    - 0104-Fixed-linking-error-in-conda-builds.patch
    - 0106-Upstream-patch-for-absl-error.patch            #[x86_64]
    - 0107-do-not-hardcode-ca-cert-location.patch

    # 02xx - GPU only patch specific to open-ce (maybe)
{% if build_type == 'cuda' %}
    - 0201-add-additional-cuda-rpaths.patch
    - 0202-Remove-extra-null-terminators.patch
    - 0203-Find-cublas-in-conda-environment.patch
    - 0204-Replace-var-lock-with-tmp-lock.patch
    - 0205-Fix-the-build-on-x86-opence-container.patch    #[x86_64] 
{% endif %}

    # 03xx - patch temporary to fix a problem that when fixed upstream can be removed
    - 0300-fix-constant_op_test.patch
    - 0301-update-ICU-patch-for-CVE-2020-10531.patch
    - 0303-Eigen-customized.patch                        #[ppc64le]

build:
  number: 5
  entry_points:
    - toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main
    - tflite_convert = tensorflow.lite.python.tflite_convert:main
    - toco = tensorflow.lite.python.tflite_convert:main
    - saved_model_cli = tensorflow.python.tools.saved_model_cli:main
    # The tensorboard package adds this entry point.
    # - tensorboard = tensorboard.main:run_main
    - tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main
    - estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main

outputs:
  - name: tensorflow-base
    script: build-pip-package.sh
    build:
      string: {{ build_type }}_py{{ python | replace(".", "") }}_{{ PKG_BUILDNUM }}   #[build_type == 'cpu']
      string: {{ build_type }}{{ cudatoolkit | replace(".*", "") }}_py{{ python | replace(".", "") }}_{{ PKG_BUILDNUM }} #[build_type == 'cuda']
{% if build_type == 'cuda' %}
      script_env:
        - CUDA_HOME
{% endif %}

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        # conda build requirements
        - git >=2.2
        - bazel {{ bazel }}
        - pip
        - setuptools {{ setuptools }}
        - python {{ python }}
        - swig
        {% if build_type == 'cuda' %}
        - cudatoolkit {{ cudatoolkit }}
        - cudnn {{ cudnn }}
        - nccl {{ nccl }}
        - tensorrt {{ tensorrt }}     #[py<38]
        {% endif %}
        - zlib
        #  This list needs to match exacly tensorflow/tools/pip_package/setup.py.
        #  This list is what is displayed on "conda info" for the package.
        #  This list needs to exactly match the setup.py because this is the
        #  list of dependencies installed by conda when the package is installed
        #  which could cause a runtime mismatch if the list doesn't match the
        #  setup.py list.
        - absl-py {{ absl_py }}
        - astunparse {{ astunparse }}
        - python-flatbuffers {{ flatbuffers }}
        - gast {{ gast }}
        - google-pasta {{ google_pasta }}
        - h5py {{ h5py }}
        - keras-preprocessing {{ keras_preprocessing }}
        - numpy {{ numpy }}
        - opt_einsum {{ opt_einsum }}
        - protobuf {{ protobuf }}
        # don't include tensorboard with base
        # don't include tensorflow_estimator
        - termcolor {{ termcolor }}
        - wrapt {{ wrapt }}
        - wheel {{ wheel }}
        - six {{ six }}
        - typing_extensions {{ typing_extensions }}     #[py<38]
        - sqlite
      run:
        - python {{ python }}
        {% if build_type == 'cuda' %}
        - cudatoolkit {{ cudatoolkit }}
        - cudnn {{ cudnn }}
        - nccl {{ nccl }}
        - tensorrt {{ tensorrt }}     #[py<38]
        {% endif %}
        # Included for keras team keras
        - pillow {{ pillow }}
        # List from TensorFlow setup.py
        - absl-py {{ absl_py }}
        - astunparse {{ astunparse }}
        - python-flatbuffers {{ flatbuffers }}
        - gast {{ gast }}
        - google-pasta {{ google_pasta }}
        - h5py {{ h5py }}
        - keras-preprocessing {{ keras_preprocessing }}
        - numpy {{ numpy }}
        - opt_einsum {{ opt_einsum }}
        - protobuf {{ protobuf }}
        # don't include tensorboard with base
        # don't include tensorflow_estimator
        - termcolor {{ termcolor }}
        - wrapt {{ wrapt }}
        - wheel {{ wheel }}
        - six {{ six }}
        - typing_extensions {{ typing_extensions }}     #[py<38]
        - sqlite
        - _tensorflow_select {{ tensorflow_select_version }}

  - name: libtensorflow
    script: build-libtensorflow.sh
    build:
      string: {{ build_type }}_py{{ python | replace(".", "") }}_{{ PKG_BUILDNUM }}   #[build_type == 'cpu']
      string: {{ build_type }}{{ cudatoolkit | replace(".*", "") }}_py{{ python | replace(".", "") }}_{{ PKG_BUILDNUM }} #[build_type == 'cuda']
{% if build_type == 'cuda' %}
      script_env:
        - CUDA_HOME
{% endif %}

    requirements:
      build:
        - tensorflow-base {{ tensorflow }}
      run:
        {% if build_type == 'cuda' %}
        - cudatoolkit {{ cudatoolkit }}
        - cudnn {{ cudnn }}
        - nccl {{ nccl }}
        - tensorrt {{ tensorrt }}     #[py<38]
        {% endif %}
        - protobuf {{ protobuf }}
        - _tensorflow_select {{ tensorflow_select_version }}

about:
  home: http://tensorflow.org/
  license: Apache 2.0
  license_family: Apache
  license_file: LICENSE
  summary: TensorFlow is a machine learning library, base GPU package, tensorflow only.
  description: |
    TensorFlow provides multiple APIs.The lowest level API, TensorFlow Core
    provides you with complete programming control.
    Base GPU package contains only tensorflow, not tensorflow-tensorboard.
  dev_url: https://github.com/tensorflow/tensorflow
  doc_url: https://www.tensorflow.org
  doc_source_url: https://github.com/tensorflow/docs

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
