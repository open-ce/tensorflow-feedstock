From c9eb49b93866fde47301af3ce1e906f3e93b84ca Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23@in.ibm.com>
Date: Fri, 7 Apr 2023 13:34:12 +0000
Subject: [PATCH] Fix s390x type casting

---
 .../compiler/xla/stream_executor/tpu/c_api_conversions.cc     | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/tensorflow/compiler/xla/stream_executor/tpu/c_api_conversions.cc b/tensorflow/compiler/xla/stream_executor/tpu/c_api_conversions.cc
index d5f2dc28021..6e83ccec173 100644
--- a/tensorflow/compiler/xla/stream_executor/tpu/c_api_conversions.cc
+++ b/tensorflow/compiler/xla/stream_executor/tpu/c_api_conversions.cc
@@ -163,7 +163,7 @@ template <typename Src, typename Dst, typename DstList>
 static void CreateVectorBase(const absl::Span<Src> src, DstList* dst) {
   dst->size = src.size();
   if (dst->size > TPU_C_API_MAX_INLINED) {
-    dst->heap = new Dst[dst->size];
+    dst->heap = reinterpret_cast<Dst*>(new Dst[dst->size]);
     std::copy(src.begin(), src.end(), dst->heap);
   } else {
     std::copy(src.begin(), src.end(), dst->inlined);
@@ -212,7 +212,7 @@ static void CreateVector(const absl::Span<const xla::Tile> src, TileList* dst) {
 template <typename Dst, typename Src, typename SrcList>
 static absl::Span<const Dst> MakeSpanBase(const SrcList& src_list) {
   static_assert(sizeof(Src) == sizeof(Dst), "Mismatched types");
-  const Src* src = src_list.size > TPU_C_API_MAX_INLINED ? src_list.heap
+  const Src* src = src_list.size > TPU_C_API_MAX_INLINED ? reinterpret_cast<const Src*>(src_list.heap)
                                                          : &src_list.inlined[0];
   return absl::Span<const Dst>(reinterpret_cast<const Dst*>(src),
                                src_list.size);
-- 
2.34.1

