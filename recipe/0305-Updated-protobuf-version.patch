From 38ece4c0b10a81b278628f149023df547661c7e3 Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23@in.ibm.com>
Date: Fri, 11 Mar 2022 04:39:27 -0500
Subject: [PATCH] Updated protobuf to 3.19

---
 tensorflow/workspace2.bzl           |   6 +-
 third_party/protobuf/protobuf.patch | 181 ++++------------------------
 2 files changed, 29 insertions(+), 158 deletions(-)

diff --git a/tensorflow/workspace2.bzl b/tensorflow/workspace2.bzl
index 60deadb1962..890d64bcbbd 100644
--- a/tensorflow/workspace2.bzl
+++ b/tensorflow/workspace2.bzl
@@ -455,14 +455,14 @@ def _tf_repositories():
     tf_http_archive(
         name = "com_google_protobuf",
         patch_file = ["//third_party/protobuf:protobuf.patch"],
-        sha256 = "cfcba2df10feec52a84208693937c17a4b5df7775e1635c1e3baffc487b24c9b",
-        strip_prefix = "protobuf-3.9.2",
+        sha256 = "25f1292d4ea6666f460a2a30038eef121e6c3937ae0f61d610611dfb14b0bd32",
+        strip_prefix = "protobuf-3.19.1",
         system_build_file = "//third_party/systemlibs:protobuf.BUILD",
         system_link_files = {
             "//third_party/systemlibs:protobuf.bzl": "protobuf.bzl",
             "//third_party/systemlibs:protobuf_deps.bzl": "protobuf_deps.bzl",
         },
-        urls = tf_mirror_urls("https://github.com/protocolbuffers/protobuf/archive/v3.9.2.zip"),
+        urls = tf_mirror_urls("https://github.com/protocolbuffers/protobuf/archive/v3.19.1.zip"),
     )
 
     tf_http_archive(
diff --git a/third_party/protobuf/protobuf.patch b/third_party/protobuf/protobuf.patch
index 1aae0459185..3b66d914cae 100644
--- a/third_party/protobuf/protobuf.patch
+++ b/third_party/protobuf/protobuf.patch
@@ -1,8 +1,19 @@
+From ef3ddf2dea3ff3548f85a0b4145692522025fe19 Mon Sep 17 00:00:00 2001
+From: Nishidha Panpaliya <npanpa23@in.ibm.com>
+Date: Fri, 11 Mar 2022 04:37:39 -0500
+Subject: [PATCH] Protobuf changes
+
+---
+ BUILD                                          | 4 +++-
+ python/google/protobuf/pyext/message.cc        | 4 ++++
+ python/google/protobuf/pyext/unknown_fields.cc | 2 +-
+ 3 files changed, 8 insertions(+), 2 deletions(-)
+
 diff --git a/BUILD b/BUILD
-index dbae719ff..4e276c854 100644
+index 1690d4219..6c1de4a1e 100644
 --- a/BUILD
 +++ b/BUILD
-@@ -23,7 +23,7 @@ config_setting(
+@@ -19,7 +19,7 @@ exports_files(["LICENSE"])
  # ZLIB configuration
  ################################################################################
  
@@ -11,15 +22,7 @@ index dbae719ff..4e276c854 100644
  
  ################################################################################
  # Protobuf Runtime Library
-@@ -100,6 +100,7 @@ LINK_OPTS = select({
- 
- load(
-     ":protobuf.bzl",
-+    "adapt_proto_library",
-     "cc_proto_library",
-     "py_proto_library",
-     "internal_copied_filegroup",
-@@ -143,6 +144,7 @@ cc_library(
+@@ -196,6 +196,7 @@ cc_library(
      copts = COPTS,
      includes = ["src/"],
      linkopts = LINK_OPTS,
@@ -27,7 +30,7 @@ index dbae719ff..4e276c854 100644
      visibility = ["//visibility:public"],
  )
  
-@@ -213,6 +215,7 @@ cc_library(
+@@ -269,6 +270,7 @@ cc_library(
      copts = COPTS,
      includes = ["src/"],
      linkopts = LINK_OPTS,
@@ -35,162 +38,27 @@ index dbae719ff..4e276c854 100644
      visibility = ["//visibility:public"],
      deps = [":protobuf_lite"] + PROTOBUF_DEPS,
  )
-@@ -255,13 +258,15 @@ filegroup(
-     visibility = ["//visibility:public"],
- )
- 
--cc_proto_library(
-+adapt_proto_library(
-+    name = "cc_wkt_protos_genproto",
-+    deps = [proto + "_proto" for proto in WELL_KNOWN_PROTO_MAP.keys()],
-+    visibility = ["//visibility:public"],
-+)
-+
-+cc_library(
-     name = "cc_wkt_protos",
--    srcs = WELL_KNOWN_PROTOS,
--    include = "src",
--    default_runtime = ":protobuf",
--    internal_bootstrap_hack = 1,
--    protoc = ":protoc",
-+    deprecation = "Only for backward compatibility. Do not use.",
-     visibility = ["//visibility:public"],
- )
- 
-@@ -978,10 +983,10 @@ cc_library(
- 
- proto_lang_toolchain(
-     name = "cc_toolchain",
-+    blacklisted_protos = [proto + "_proto" for proto in WELL_KNOWN_PROTO_MAP.keys()],
-     command_line = "--cpp_out=$(OUT)",
-     runtime = ":protobuf",
-     visibility = ["//visibility:public"],
--    blacklisted_protos = [":_internal_wkt_protos_genrule"],
- )
- 
- proto_lang_toolchain(
-diff --git a/protobuf.bzl b/protobuf.bzl
-index e0653321f..4156a1275 100644
---- a/protobuf.bzl
-+++ b/protobuf.bzl
-@@ -1,4 +1,5 @@
- load("@bazel_skylib//lib:versions.bzl", "versions")
-+load("@rules_proto//proto:defs.bzl", "ProtoInfo")
- 
- def _GetPath(ctx, path):
-     if ctx.label.workspace_root:
-@@ -85,6 +86,8 @@ def _proto_gen_impl(ctx):
-     for dep in ctx.attr.deps:
-         import_flags += dep.proto.import_flags
-         deps += dep.proto.deps
-+    import_flags = depset(import_flags).to_list()
-+    deps = depset(deps).to_list()
- 
-     if not ctx.attr.gen_cc and not ctx.attr.gen_py and not ctx.executable.plugin:
-         return struct(
-@@ -222,6 +225,29 @@ Args:
-   outs: a list of labels of the expected outputs from the protocol compiler.
- """
- 
-+def _adapt_proto_library_impl(ctx):
-+    deps = [dep[ProtoInfo] for dep in ctx.attr.deps]
-+
-+    srcs = [src for dep in deps for src in dep.direct_sources]
-+    return struct(
-+        proto = struct(
-+            srcs = srcs,
-+            import_flags = ["-I{}".format(path) for dep in deps for path in dep.transitive_proto_path.to_list()],
-+            deps = srcs,
-+        ),
-+    )
-+
-+adapt_proto_library = rule(
-+    implementation = _adapt_proto_library_impl,
-+    attrs = {
-+        "deps": attr.label_list(
-+            mandatory = True,
-+            providers = [ProtoInfo],
-+        ),
-+    },
-+    doc = "Adapts `proto_library` from `@rules_proto` to be used with `{cc,py}_proto_library` from this file.",
-+)
-+
- def cc_proto_library(
-         name,
-         srcs = [],
-@@ -229,7 +255,6 @@ def cc_proto_library(
-         cc_libs = [],
-         include = None,
-         protoc = "@com_google_protobuf//:protoc",
--        internal_bootstrap_hack = False,
-         use_grpc_plugin = False,
-         default_runtime = "@com_google_protobuf//:protobuf",
-         **kargs):
-@@ -247,41 +272,17 @@ def cc_proto_library(
-           cc_library.
-       include: a string indicating the include path of the .proto files.
-       protoc: the label of the protocol compiler to generate the sources.
--      internal_bootstrap_hack: a flag indicate the cc_proto_library is used only
--          for bootstraping. When it is set to True, no files will be generated.
--          The rule will simply be a provider for .proto files, so that other
--          cc_proto_library can depend on it.
-       use_grpc_plugin: a flag to indicate whether to call the grpc C++ plugin
-           when processing the proto files.
-       default_runtime: the implicitly default runtime which will be depended on by
-           the generated cc_library target.
-       **kargs: other keyword arguments that are passed to cc_library.
--
-     """
- 
-     includes = []
-     if include != None:
-         includes = [include]
- 
--    if internal_bootstrap_hack:
--        # For pre-checked-in generated files, we add the internal_bootstrap_hack
--        # which will skip the codegen action.
--        proto_gen(
--            name = name + "_genproto",
--            srcs = srcs,
--            deps = [s + "_genproto" for s in deps],
--            includes = includes,
--            protoc = protoc,
--            visibility = ["//visibility:public"],
--        )
--
--        # An empty cc_library to make rule dependency consistent.
--        native.cc_library(
--            name = name,
--            **kargs
--        )
--        return
--
-     grpc_cpp_plugin = None
-     if use_grpc_plugin:
-         grpc_cpp_plugin = "//external:grpc_cpp_plugin"
 diff --git a/python/google/protobuf/pyext/message.cc b/python/google/protobuf/pyext/message.cc
-index 3530a9b37..c31fa8fcc 100644
+index cb48faa44..184e27274 100644
 --- a/python/google/protobuf/pyext/message.cc
 +++ b/python/google/protobuf/pyext/message.cc
-@@ -2991,8 +2991,12 @@ bool InitProto2MessageModule(PyObject *m) {
-         reinterpret_cast<PyObject*>(
-             &RepeatedCompositeContainer_Type));
+@@ -2957,7 +2957,11 @@ bool InitProto2MessageModule(PyObject *m) {
+         reinterpret_cast<PyObject*>(&RepeatedCompositeContainer_Type));
  
--    // Register them as collections.Sequence
-+    // Register them as MutableSequence.
+     // Register them as MutableSequence.
 +#if PY_MAJOR_VERSION >= 3
-+    ScopedPyObjectPtr collections(PyImport_ImportModule("collections.abc"));
+     ScopedPyObjectPtr collections(PyImport_ImportModule("collections.abc"));
 +#else
-     ScopedPyObjectPtr collections(PyImport_ImportModule("collections"));
++     ScopedPyObjectPtr collections(PyImport_ImportModule("collections"));
 +#endif
      if (collections == NULL) {
        return false;
      }
 diff --git a/python/google/protobuf/pyext/unknown_fields.cc b/python/google/protobuf/pyext/unknown_fields.cc
-index c3679c0d3..e80a1d97a 100755
+index 7f4fb23ed..73a518c9f 100644
 --- a/python/google/protobuf/pyext/unknown_fields.cc
 +++ b/python/google/protobuf/pyext/unknown_fields.cc
-@@ -221,7 +221,7 @@ const UnknownField* GetUnknownField(PyUnknownFieldRef* self) {
+@@ -218,7 +218,7 @@ const UnknownField* GetUnknownField(PyUnknownFieldRef* self) {
                   "The parent message might be cleared.");
      return NULL;
    }
@@ -199,3 +67,6 @@ index c3679c0d3..e80a1d97a 100755
    if (self->index >= total_size) {
      PyErr_Format(PyExc_ValueError,
                   "UnknownField does not exist. "
+-- 
+2.23.0
+
-- 
2.23.0

